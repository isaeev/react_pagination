{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","items","map","links","Math","ceil","arrengedItems","startIndex","slice","arrangeItems","handleOnClick","page","className","cn","disabled","href","onClick","link","active","length","item","App","perPageValues","useState","setCurrentPage","setPerPage","min","id","onChange","event","target","value","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"kNAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EAGF,I,OCCMG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAQX,EAAW,EAAGO,GAAOK,KAAI,SAACR,GAAD,qBAAeA,MAGhDS,EAAQb,EAAW,EADXc,KAAKC,KAAKR,EAAQC,IAG1BQ,EDZoB,SAC1BL,EACAH,EACAC,GAEA,IAAMQ,EAAaT,GAAWC,EAAc,GAE5C,OAAO,YAAIE,EAAMO,MAAMD,EAAYA,EAAaT,ICK1BW,CAAaR,EAAOH,EAASC,GAE7CW,EAAgB,SAACC,GACrBX,EAAaW,IAGf,OACE,qCACE,qBAAIC,UAAU,aAAd,UACE,oBACEA,UAAWC,IAAG,YAAa,CACzBC,SAAUf,IAAgBI,EAAM,KAFpC,SAKE,mBACE,UAAQ,WACRS,UAAU,YACVG,KAAK,QACL,gBACEhB,IAAgBI,EAAM,GAAK,OAAS,QAEtCa,QAAS,WACHjB,EAAc,GAChBW,EAAcX,EAAc,IATlC,oBAgBDI,EAAMD,KAAI,SAACe,GAAD,OACT,oBAEEL,UAAWC,IAAG,YAAa,CACzBK,OAAQnB,IAAgBkB,IAH5B,SAME,mBACE,UAAQ,WACRL,UAAU,YACVG,KAAK,UACLC,QAAS,kBAAMN,EAAcO,IAJ/B,SAMGA,KAXEA,MAeT,oBACEL,UAAWC,IAAG,YAAa,CACzBC,SAAUf,IAAgBI,EAAMA,EAAMgB,OAAS,KAFnD,SAKE,mBACE,UAAQ,WACRP,UAAU,YACVG,KAAK,QACL,gBACEhB,IAAgBI,EAAMA,EAAMgB,OAAS,GAAK,OAAS,QAErDH,QAAS,WACHjB,EAAcI,EAAMA,EAAMgB,OAAS,IACrCT,EAAcX,EAAc,IATlC,uBAiBJ,6BACGO,EAAcJ,KAAI,SAACkB,GAAD,OACjB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YCzFNC,EAAgB,WAC3B,IACMC,EAAgB,CAAC,EAAG,EAAG,GAAI,IACjC,EAAsCC,mBAAS,GAA/C,mBAAOxB,EAAP,KAAoByB,EAApB,KACA,EAA8BD,mBAASD,EAAc,IAArD,mBAAOxB,EAAP,KAAgB2B,EAAhB,KAEA,OACE,sBAAKb,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWb,EADX,oBACkCA,EAAc,GAAKD,EAAU,EAD/D,cACsEM,KAAKsB,IAAI3B,EAAcD,EAV9E,IASf,eATe,GASf,OAIA,sBAAKc,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACRe,GAAG,kBACHf,UAAU,eACVgB,SACE,SAACC,GACCJ,GAAYI,EAAMC,OAAOC,OACzBP,EAAe,IAGnBO,MAAOjC,EAVT,SAYGwB,EAAcpB,KAAI,SAAC6B,GAAD,OACjB,wBAAoBA,MAAOA,EAA3B,SAAmCA,GAAtBA,UAKnB,uBAAOC,QAAQ,kBAAkBpB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEf,MAvCa,GAwCbC,QAASA,EACTC,YAAaA,EACbC,aAAc,SAACW,GAAD,OAAUa,EAAeb,UC5C/CsB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.d1a18629.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n\nexport const arrangeItems = (\n  items: string[],\n  perPage: number,\n  currentPage: number,\n): string[] => {\n  const startIndex = perPage * (currentPage - 1);\n\n  return [...items.slice(startIndex, startIndex + perPage)];\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { arrangeItems, getNumbers } from '../../utils';\n\ntype Props = {\n  total: number; // total number of items to paginate\n  perPage: number; // number of items per page\n  currentPage: number /* optional with 1 by default */;\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const items = getNumbers(1, total).map((n) => `Item ${n}`);\n\n  const pages = Math.ceil(total / perPage);\n  const links = getNumbers(1, pages);\n\n  const arrengedItems = arrangeItems(items, perPage, currentPage);\n\n  const handleOnClick = (page: number) => {\n    onPageChange(page);\n  };\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li\n          className={cn('page-item', {\n            disabled: currentPage === links[0],\n          })}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={\n              currentPage === links[0] ? 'true' : 'false'\n            }\n            onClick={() => {\n              if (currentPage > 1) {\n                handleOnClick(currentPage - 1);\n              }\n            }}\n          >\n            «\n          </a>\n        </li>\n        {links.map((link) => (\n          <li\n            key={link}\n            className={cn('page-item', {\n              active: currentPage === link,\n            })}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href=\"#{link}\"\n              onClick={() => handleOnClick(link)}\n            >\n              {link}\n            </a>\n          </li>\n        ))}\n        <li\n          className={cn('page-item', {\n            disabled: currentPage === links[links.length - 1],\n          })}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={\n              currentPage === links[links.length - 1] ? 'true' : 'false'\n            }\n            onClick={() => {\n              if (currentPage < links[links.length - 1]) {\n                handleOnClick(currentPage + 1);\n              }\n            }}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n      <ul>\n        {arrengedItems.map((item) => (\n          <li key={item} data-cy=\"item\">{item}</li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\n\nexport const App: React.FC = () => {\n  const totalPages = 42;\n  const perPageValues = [3, 5, 10, 20];\n  const [currentPage, setCurrentPage] = useState(1);\n  const [perPage, setPerPage] = useState(perPageValues[1]);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${(currentPage - 1) * perPage + 1} - ${Math.min(currentPage * perPage, totalPages)} of ${totalPages})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={\n              (event) => {\n                setPerPage(+event.target.value);\n                setCurrentPage(1);\n              }\n            }\n            value={perPage}\n          >\n            {perPageValues.map((value) => (\n              <option key={value} value={value}>{value}</option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={totalPages}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={(page) => setCurrentPage(page)}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}